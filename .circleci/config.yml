version: 2.1

jobs:
  build:
    docker:
      - image: circleci/node:12.18.3
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CURRENT_BRANCH}
      - restore_cache:
          keys:
            - app-{{checksum "package.json"}}
            - app-
      - run:
          name: install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: app-{{checksum "package.json"}}
  deploy-to-aws-s3:
    docker:
      - image: circleci/node:12.18.3
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CURRENT_BRANCH}
      - run:
          name: Installing AWS circleci
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python-pip python-dev build-essential
      - run:
          name: Build project
          command: |
            npm install
            npm run build
            cd
            sudo zip ../build.zip -r * .[^.]*
            echo "build successful"
      - run:
          name: Deploy to AWS s3
          command: |
            if ["${CURRENT_BRANCH}" == "main" ]
            then 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_PROD_BUCKET} --delete
            elif ["${CURRENT_BRANCH}" == "staging" ]
            then 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_STAGING_BUCKET} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete
            fi
  deploy-to-aws-cloudfront:
    docker:
      - image: circleci/node:12.18.3
    working_directory: ~/repo
    steps:
        - checkout
        - run:
            name: Show current branch
            command: echo ${CURRENT_BRANCH}
        - run:
            name: Installing AWS circleci
            working_directory: /
            command: |
              sudo apt-get -y -qq update
              sudo apt-get install -y awscli
              sudo apt-get install -y python-pip python-dev build-essential
        - run:
            name: Build project
            command: |
              npm install
              npm run build
              cd
              sudo zip ../build.zip -r * .[^.]*
              echo "build successful"
        - run:
            name: Deploy to AWS CloudFront
            command: |
              aws configure set preview.cloudfront
              if ["${CURRENT_BRANCH}" == "main" ]
              then 
                aws cloudfront create-invalidation --distribution-id ${PROD_DISTRIBUTION_ID} --paths "./*"
              elif ["${CURRENT_BRANCH}" == "staging" ]
              then 
                aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths "./*"
              else
                aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths "./*"
              fi
workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3: 
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - main
      - deploy-to-aws-cloudfront: 
          requires: 
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - main